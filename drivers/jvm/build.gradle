plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.8.22'
  id 'org.jetbrains.dokka' version '1.8.20'
  id 'io.gitlab.arturbosch.detekt' version '1.23.6'
  id 'maven-publish'
  id 'signing'
}

repositories {
  mavenCentral()
}

subprojects {
  apply plugin: 'java'
  apply plugin: 'org.jetbrains.kotlin.jvm'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'
  apply plugin: 'org.jetbrains.dokka'

  repositories {
    mavenCentral()
  }

  version = '0.4.3'

  targetCompatibility = '11'
  sourceCompatibility = '11'

  jar {
    manifest {
      attributes provider: 'gradle',
        'Implementation-Title': project.name, 'Implementation-Version': archiveVersion,
        'Implementation-Vendor': project.group, 'Implementation-Vendor-Id': project.group,
        'Specification-Vendor': project.group,
        'Specification-Title': project.name,
        'Specification-Version': archiveVersion,
        'Automatic-Module-Name': project.group + "." + project.name.replaceAll('-', '_')
    }
  }

  tasks.register('javadocJar', Jar) {
    dependsOn = [javadoc, dokkaJavadoc]
    archiveClassifier = 'javadoc'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from javadoc.destinationDir, dokkaJavadoc.outputDirectory
  }

  tasks.register('sourceJar', Jar) {
    archiveClassifier = 'sources'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.allSource
  }

  compileKotlin {
    kotlinOptions.jvmTarget = '11'
  }
  compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
  }

  test {
    useJUnitPlatform()
  }

  publishing {
    publications {
      mavenPublication(MavenPublication) {
        from components.java
        artifact sourceJar
        artifact javadocJar
        pom {
          name = project.name
          description = 'Pact Plugin Driver implementation'
          url = 'https://github.com/pact-foundation/pact-plugins'
          licenses {
            license {
              name = 'MIT'
              url = 'https://github.com/pact-foundation/pact-plugins/blob/main/LICENSE'
              distribution = 'repo'
            }
          }
          scm {
            url = 'https://github.com/pact-foundation/pact-plugins'
            connection = 'git://github.com/pact-foundation/pact-plugins.git'
          }

          developers {
            developer {
              id = 'mfellows'
              name = 'Matt Fellows'
              email = 'mfellows@dius.com.au'
            }
            developer {
              id = 'rholshausen'
              name = 'Ronald Holshausen'
              email = 'rholshausen@dius.com.au'
            }
          }
        }
      }
    }
    repositories {
      maven {
        url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
        if (project.hasProperty('sonatypeUsername')) {
          credentials {
            username sonatypeUsername
            password sonatypePassword
          }
        }
      }
    }
  }

  signing {
    required { project.hasProperty('isRelease') }
    sign publishing.publications.mavenPublication
  }

  detekt {
    config.setFrom(rootProject.file("config/detekt-config.yml"))
  }
}
